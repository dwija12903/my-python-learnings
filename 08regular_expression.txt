regular expression in python are very long strings, there are functions to make easy access to this expressions. regularexp='''  '''
raw strings: doesnot allow python to take control 
example- '/t dwija' # dwija
        r'/t dwija' #/t dwija 

import re
x=re.compile('text to search') #use to find a text in regexp
y=x.finditer(regularexp) #gives all the possible outcome of that
for i in y:
  print(i) #gives object which has span and that span can be used with slicing and then we canfind       strings

.       - Any Character Except New Line
\d      - Digit (0-9)
\D      - Not a Digit (0-9)
\w      - Word Character (a-z, A-Z, 0-9, _)
\W      - Not a Word Character
\s      - Whitespace (space, tab, newline)
\S      - Not Whitespace (space, tab, newline)
\b      - Word Boundary #no space b/w the words
\B      - Not a Word Boundary
^       - Beginning of a String
$       - End of a String
[]      - Matches Characters in brackets
[^ ]    - Matches Characters NOT in brackets
|       - Either Or
( )     - Group
Quantifiers:
*       - 0 or More
+       - 1 or More
?       - 0 or One
{3}     - Exact Number
{3,4}   - Range of Numbers (Minimum, Maximum)
#### Sample Regexs ####
[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+